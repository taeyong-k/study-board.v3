<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tyk.boardev.mappers.ArticleMapper">
    <insert id="insert"
            useGeneratedKeys="true"
            keyColumn="id"
            keyProperty="id">
        insert into `exam_0528`.`articles`(`nickname`, `password`, `title`, `content`, `view`, `created_at`,
                                           `is_deleted`)
        values (#{article.nickname}, #{article.password}, #{article.title}, #{article.content}, #{article.view},
                #{article.createdAt}, #{article.isDeleted});
    </insert>

    <select id="selectById" resultType="com.tyk.boardev.entities.ArticleEntity">
        select `id`          as `id`,
               `nickname`    as `nickname`,
               `password`  as `password`,
               `title`       as `title`,
               `content`     as `content`,
               `view`        as `view`,
               `created_at`  as `createdAt`,
               `is_deleted`  as `isDeleted`
        from `exam_0528`.`articles`
        where `id` = #{id}
        limit 1
    </select>

    <update id="update">
        update `exam_0528`.`articles`
        set nickname    = #{article.nickname},
            password  = #{article.password},
            title       = #{article.title},
            content     = #{article.content},
            view        = #{article.view},
            created_at  = #{article.createdAt},
            is_deleted  = #{article.isDeleted}
        where `id` = #{article.id}
        limit 1
    </update>

    <select id="selectAll" resultType="com.tyk.boardev.entities.ArticleEntity">  <!-- 전체 게시글 목록 조회 -->
        select `id`         as `id`,
               `nickname`   as `nickname`,
               `password`   as `password`,
               `title`      as `title`,
               `content`    as `content`,
               `view`       as `view`,
               `created_at` as `createdAt`,
               `is_deleted` as `isDeleted`
        from `exam_0528`.`articles`
        order by `id` desc
        limit #{pageVo.rowCount} offset #{pageVo.dbOffset}
    </select>

    <select id="search" resultType="com.tyk.boardev.entities.ArticleEntity">    <!-- 검색된 게시글 목록 조회 -->
        select `id`         as `id`,
               `nickname`   as `nickname`,
               `password`   as `password`,
               `title`      as `title`,
               `content`    as `content`,
               `view`       as `view`,
               `created_at` as `createdAt`,
               `is_deleted` as `isDeleted`
        from `exam_0528`.`articles`
        where (title LIKE concat('%', #{searchVo.keyword}, '%')
        OR content LIKE concat('%', #{searchVo.keyword}, '%')
        OR nickname LIKE concat('%', #{searchVo.keyword}, '%'))
        order by `id` desc
        limit #{pageVo.rowCount} offset #{pageVo.dbOffset}
    </select>

    <select id="selectTotalCount" resultType="java.lang.Integer">               <!-- 전체 게시글 수 조회 -->
        select count(0)
        from `exam_0528`.`articles`
    </select>

    <select id="selectSearchCount" resultType="java.lang.Integer">              <!-- 검색된 게시글 수 조회 -->
        select count(0)
        from `exam_0528`.`articles`
        where (title LIKE concat('%', #{searchVo.keyword}, '%')
        OR content LIKE concat('%', #{searchVo.keyword}, '%')
        OR nickname LIKE concat('%', #{searchVo.keyword}, '%'))
    </select>

</mapper>